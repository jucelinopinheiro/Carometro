@using CarometroV6.ViewModel.AlunoViewModel;
@model CriarAlunoViewModel
@{
    ViewData["Title"] = "Criar Aluno";
}

<div>
    <div>
        <h1 class="display-4">Criar Aluno</h1>
        <hr>

    </div>

    @if (TempData["MensagemSucesso"] != null)
    {
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            @TempData["MensagemSucesso"]
        </div>
    }

    @if (TempData["MensagemErro"] != null)
    {
        <div class="alert alert-dismissible alert-danger">
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            @TempData["MensagemErro"]
        </div>
    }
    <form asp-controller="Aluno" asp-action="CriarAluno" method="post">
        <div class="form-group mt-2">
            @Html.LabelFor(x => x.Nome)
            @Html.EditorFor(x => x.Nome, new {htmlAttributes = new {@class="form-control", @required="required"}})
            @Html.ValidationMessageFor(x => x.Nome)
        </div>
        <div class="row mt-2">
            <div class="col-md-8 form-group">
                @Html.LabelFor(x => x.EmailAluno)
                <input type="email" class="form-control" asp-for="EmailAluno" />
                @Html.ValidationMessageFor(x => x.EmailAluno)
            </div>
            <div class="col-md-4 form-group">
                @Html.LabelFor(x => x.CelAluno)
                @Html.EditorFor(x => x.CelAluno, new {htmlAttributes = new {@class="form-control"}})
                @Html.ValidationMessageFor(x => x.CelAluno)
            </div>
        </div>
        
        <div class="row mt-2">
            <div class="col-md-4 form-group">
                @Html.LabelFor(x => x.Nascimento)
                <input type="date" class="form-control" asp-for="Nascimento" asp-format="{0:yyyy-MM-dd}" value="" required />
                @Html.ValidationMessageFor(x => x.Nascimento)
            </div>
            <div class="col-md-4 form-group">
                @Html.LabelFor(x => x.Rg)
                @Html.EditorFor(x => x.Rg, new {htmlAttributes = new {@class="form-control",  @oninput="mascaraRg(this)", @required="required"}})
                @Html.ValidationMessageFor(x => x.Rg)
            </div>
            <div class="col-md-4 form-group">
                @Html.LabelFor(x => x.Cpf)
                @Html.EditorFor(x => x.Cpf, new {htmlAttributes = new {@class="form-control", @oninput="mascaraCpf(this)", @required="required"}})
                @Html.ValidationMessageFor(x => x.Cpf)
            </div>
        </div>
        
        <div class="row mt-2">
            <div class="col-md-8 form-group">
                @Html.LabelFor(x => x.Pai)
                @Html.EditorFor(x => x.Pai, new {htmlAttributes = new {@class="form-control"}})
                @Html.ValidationMessageFor(x => x.Pai)
            </div>
            <div class="col-md-4 form-group">
                @Html.LabelFor(x => x.CelPai)
                @Html.EditorFor(x => x.CelPai, new {htmlAttributes = new {@class="form-control"}})
                @Html.ValidationMessageFor(x => x.CelPai)
            </div>
        </div>
        
        <div class="row mt-2">
            <div class="col-md-8 form-group">
                @Html.LabelFor(x => x.Mae)
                @Html.EditorFor(x => x.Mae, new {htmlAttributes = new {@class="form-control"}})
                @Html.ValidationMessageFor(x => x.Mae)
            </div>
            <div class="col-md-4 form-group">
                @Html.LabelFor(x => x.CelMae)
                @Html.EditorFor(x => x.CelMae, new {htmlAttributes = new {@class="form-control"}})
                @Html.ValidationMessageFor(x => x.CelMae)
            </div>
        </div>
        
        <div class="row mt-2">
            <div class="col-md-2">
                <br />
                <div class="form-check form-switch">
                    @Html.CheckBoxFor(x => x.Pne, new {@class="form-check-input"})
                    @Html.LabelFor(x => x.Pne, new {@class="form-check-label"})
                    @Html.ValidationMessageFor(x => x.Pne)
                </div>
            </div>
            
            <div class="col-md-10 form-group">
                @Html.LabelFor(x => x.ObsAluno)
                @Html.EditorFor(x => x.ObsAluno, new {htmlAttributes = new {@class="form-control"}})
                @Html.ValidationMessageFor(x => x.ObsAluno)
            </div>
        </div>
        

        <div class="row mt-3">
            <div class="col">
                <a class="btn btn-secondary" asp-area="" asp-controller="Aluno" asp-action="Index"><i class="fas fa-undo-alt"></i> Voltar</a>
                <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> Salvar</button>
            </div>
        </div>
    </form>

</div>

